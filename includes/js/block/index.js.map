{"version":3,"file":"index.js","sources":["../../../applications/apps/block/src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport type { WCBlocksRegistry, WCSettings, WPHtmlEntities } from \"./global\";\n\n\n// Ensure TypeScript understands window properties\ndeclare global {\n  interface Window {\n    wc: {\n      wcBlocksRegistry: WCBlocksRegistry;\n      wcSettings: WCSettings;\n    };\n    wp: {\n      htmlEntities: WPHtmlEntities;\n    };\n  }\n}\n\n// Extract functions and settings from the global objects\nconst { registerPaymentMethod } = window.wc.wcBlocksRegistry;\nconst { decodeEntities } = window.wp.htmlEntities;\nconst { getSetting } = window.wc.wcSettings;\n\n// Retrieve settings and define the label\nconst settings = getSetting(\"xprcheckout_data\", {}) as {\n  description?: string;\n  supports?: any;\n};\nconst label = decodeEntities(\"XPRCheckout\");\n\n// Define Content component with settings description\nconst Content: React.FC = () => {\n  return <>{decodeEntities(settings.description || \"\")}</>;\n};\n\n// Define Label component to display the payment method label\nconst Label: React.FC<{ components: { PaymentMethodLabel: React.FC<{ text: string }> } }> = (props) => {\n  const { PaymentMethodLabel } = props.components;\n  return <PaymentMethodLabel text={label} />;\n};\n\n// Register the payment method with TypeScript typing\nregisterPaymentMethod({\n  name: \"xprcheckout\",\n  label: <Label components={{ PaymentMethodLabel: ({ text }) => <span>{text}</span> }} />,\n  content: <Content />,\n  edit: <Content />,\n  canMakePayment: () => true,\n  ariaLabel: label.toString(),\n  supports: {\n    features: settings.supports,\n  },\n});\n"],"names":["_react","_interopRequireDefault","require","e","__esModule","registerPaymentMethod","window","wc","wcBlocksRegistry","decodeEntities","wp","htmlEntities","getSetting","wcSettings","settings","label","Content","createElement","Fragment","description","Label","props","PaymentMethodLabel","components","text","name","_ref","content","edit","canMakePayment","ariaLabel","toString","supports","features"],"mappings":";;;;;EAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA,CAAA,OAAA,CAAA,CAAA;EAA0B,SAAAD,sBAAAA,CAAAE,CAAA,EAAA,EAAA,OAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,GAAA,EAAA,SAAA,EAAAA,CAAA,EAAA,CAAA;EAI1B;;EAaA;EACA,IAAQE,qBAAqB,GAAKC,MAAM,CAACC,EAAE,CAACC,gBAAgB,CAApDH,qBAAqB;EAC7B,IAAQI,cAAc,GAAKH,MAAM,CAACI,EAAE,CAACC,YAAY,CAAzCF,cAAc;EACtB,IAAQG,UAAU,GAAKN,MAAM,CAACC,EAAE,CAACM,UAAU,CAAnCD,UAAU;;EAElB;EACA,IAAME,QAAQ,GAAGF,UAAU,CAAC,kBAAkB,EAAE,EAAE,CAGjD;EACD,IAAMG,KAAK,GAAGN,cAAc,CAAC,aAAa,CAAC;;EAE3C;EACA,IAAMO,OAAiB,GAAG,SAApBA,OAAiBA,GAAS;EAC9B,EAAA,oBAAOhB,MAAA,CAAAiB,SAAAA,CAAAA,CAAAA,aAAA,CAAAjB,MAAA,YAAAkB,QAAA,EAAA,IAAA,EAAGT,cAAc,CAACK,QAAQ,CAACK,WAAW,IAAI,EAAE,CAAI,CAAC;EAC1D,CAAC;;EAED;EACA,IAAMC,KAAmF,GAAG,SAAtFA,KAAmFA,CAAIC,KAAK,EAAK;EACrG,EAAA,IAAQC,kBAAkB,GAAKD,KAAK,CAACE,UAAU,CAAvCD,kBAAkB;EAC1B,EAAA,oBAAOtB,MAAA,CAAA,SAAA,CAAA,CAAAiB,aAAA,CAACK,kBAAkB,EAAA;EAACE,IAAAA,IAAI,EAAET;EAAM,GAAE,CAAC;EAC5C,CAAC;;EAED;EACAV,qBAAqB,CAAC;EACpBoB,EAAAA,IAAI,EAAE,aAAa;EACnBV,EAAAA,KAAK,eAAEf,MAAA,CAAAiB,SAAAA,CAAAA,CAAAA,aAAA,CAACG,KAAK,EAAA;EAACG,IAAAA,UAAU,EAAE;EAAED,MAAAA,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAAI,IAAA,EAAA;EAAA,QAAA,IAAKF,IAAI,GAAAE,IAAA,CAAJF,IAAI;EAAA,QAAA,oBAAOxB,MAAA,CAAA,SAAA,CAAA,CAAAiB,aAAA,CAAA,MAAA,EAAA,IAAA,EAAOO,IAAW,CAAC;EAAA;EAAC;EAAE,GAAE,CAAC;EACvFG,EAAAA,OAAO,eAAE3B,MAAA,CAAA,SAAA,CAAA,CAAAiB,aAAA,CAACD,OAAO,MAAE,CAAC;EACpBY,EAAAA,IAAI,eAAE5B,MAAA,CAAA,SAAA,CAAA,CAAAiB,aAAA,CAACD,OAAO,MAAE,CAAC;IACjBa,cAAc,EAAE,SAAhBA,cAAcA,GAAA;EAAA,IAAA,OAAQ,IAAI;EAAA,GAAA;EAC1BC,EAAAA,SAAS,EAAEf,KAAK,CAACgB,QAAQ,EAAE;EAC3BC,EAAAA,QAAQ,EAAE;MACRC,QAAQ,EAAEnB,QAAQ,CAACkB;EACrB;EACF,CAAC,CAAC;;;;;;"}